package competition;

/**
 * @Auther: xuzhangwang
 * @Description: 马虎的算式
 *  小明是个急性子，上小学的时候经常把老师写在黑板上的题目抄错了。
    有一次，老师出的题目是：36 x 495 = ?
    他却给抄成了：396 x 45 = ?
    但结果却很戏剧性，他的答案竟然是对的！！
    因为 36 * 495 = 396 * 45 = 17820
    类似这样的巧合情况可能还有很多，比如：27 * 594 = 297 * 54
    假设 a b c d e 代表1~9不同的5个数字（注意是各不相同的数字，且不含0）
    能满足形如： ab * cde = adb * ce 这样的算式一共有多少种呢？
请你利用计算机的优势寻找所有的可能，并回答不同算式的种类数。
满足乘法交换律的算式计为不同的种类，所以答案肯定是个偶数。

 */
public class _2013_02马虎的算式 {
//    public static void main(String[] args) {
//        // 直接暴力破解
//        int tmp = 0;
//        int a = 0;
//        int b = 0;
//        int c = 0;
//        int d = 0;
//        int e = 0;
//        for (int i = 10; i < 100; i++) {
//            for (int j = 100; j < 1000; j++) {
//                a = i / 10;
//                b = i % 10;
//                c = j / 100;
//                d = (j / 10) % 10;
//                e = j % 10;
//                // 确定 a b c d e 是五个相等的数字
//                if (a == 0 || b == 0 || c == 0 || d == 0 || e == 0) {
//                    continue;
//                }
//                if (a == b || a == c || a == d || a == e || b == c || b == d || b == e || c == d || c == e || d == e) {
//                    continue;
//                }
//                int left = (a * 10 + b) * (c * 100 + d * 10 + e);
//                int right = (a * 100 + d * 10 + b) * (c * 10 + e);
//                if (left == right) {
//                    tmp++;
//                    System.out.println(i + "*" + j);
//                }
//
//            }
//        }
//        System.out.println(tmp);
//        /*
//            14*253
//            14*352
//            14*536
//            14*938
//            15*264
//            15*462
//            16*238
//            16*275
//            16*294
//            16*374
//            16*392
//            16*473
//            16*572
//            17*286
//            17*385
//            17*394
//            17*583
//            17*682
//            18*297
//            18*396
//            18*495
//            18*594
//            18*693
//            18*792
//            23*154
//            23*451
//            24*165
//            24*196
//            24*561
//            24*936
//            25*176
//            25*374
//            25*473
//            25*671
//            26*187
//            26*385
//            26*583
//            26*781
//            27*198
//            27*396
//            27*495
//            27*594
//            27*693
//            27*891
//            28*136
//            28*469
//            28*596
//            32*154
//            32*196
//            32*451
//            34*176
//            34*197
//            34*275
//            34*572
//            34*591
//            34*671
//            35*187
//            35*286
//            35*682
//            35*781
//            36*198
//            36*297
//            36*495
//            36*594
//            36*792
//            36*891
//            38*597
//            38*796
//            41*253
//            41*352
//            42*165
//            42*561
//            43*176
//            43*275
//            43*572
//            43*671
//            45*198
//            45*297
//            45*396
//            45*693
//            45*792
//            45*891
//            49*268
//            51*264
//            51*394
//            51*462
//            52*176
//            52*374
//            52*473
//            52*671
//            52*931
//            53*187
//            53*286
//            53*682
//            53*781
//            54*198
//            54*297
//            54*396
//            54*693
//            54*792
//            54*891
//            56*134
//            56*298
//            56*894
//            56*938
//            57*398
//            61*275
//            61*374
//            61*473
//            61*572
//            62*187
//            62*385
//            62*583
//            62*781
//            63*198
//            63*297
//            63*495
//            63*594
//            63*792
//            63*891
//            71*286
//            71*385
//            71*583
//            71*682
//            72*198
//            72*396
//            72*495
//            72*594
//            72*693
//            72*891
//            76*398
//            81*297
//            81*396
//            81*495
//            81*594
//            81*693
//            81*792
//            84*596
//            91*532
//            96*234
//            98*134
//            98*536
//            142
//         */
//
//    }
    public static void main(String[] args) {
        int ans = 0;
        for (int a = 1; a < 10; a++) {
            for (int b = 1; b < 10; b++) {
                if (b != a) for (int c = 1; c < 10; c++) {
                    if (c != b && c != a) for (int d = 1; d < 10; d++) {
                        if (d != c && d != b && d != a) for (int e = 1; e < 10; e++) {
                            if (e != d && e != c && e != b && e != a) {
                                int left = (a * 10 + b) * (c * 100 + d * 10 + e);
                                int right = (a * 100 + d * 10 + b) * (c * 10 + e);
                             if (left == right) {
                                ans++;
                                }
                            }
                        }
                    }
                }
            }
        }
        System.out.println(ans);
    }
    
    
}
